select distinct temp1.id,temp1.date

from 
    (SELECT itemdb.id,itemdb.date 
     FROM itemdb 
     where date=(select max(date) from itemdb) and state='wait'
    ) temp1 

select temp2.id from 
(select * 
 from itemdb
 inner join 
    (select distinct id,formname,formflowdb.department,step
     from formflowdb inner join managerinfodb
     on formflowdb.department=
        (select department 
         from managerinfodb 
         where username='WangJiaying'
        )
     ) temp1 

 on itemdb.id=temp1.id
) temp2

where temp2.date=
      (select max(temp2.date) from temp2);

select min(temp2.id) from
(select itemdb.id,itemdb.state
 from itemdb
 inner join
    (select distinct formname,step
     from formflowdb
     inner join managerinfodb
     on formflowdb.department=
        (select department
         from managerinfodb
         where username='WangJiaying'
        )
     ) temp1
 on itemdb.step=temp1.step and itemdb.formname=temp1.formname
) temp2
 where temp2.state='wait';           
 
 
 select name from formdb where name='交换生申请表'  
 
 SELECT distinct recordhistorydb.i_id, recordhistorydb.date, itemdb.formname, itemdb.state, itemdb.username, department from recordhistorydb inner join itemdb on itemdb.username='ipiszy' order by recordhistorydb.date desc;
 
 
 SELECT distinct recordhistorydb.i_id, recordhistorydb.date, itemdb.formname, itemdb.state, itemdb.username, department from recordhistorydb inner join itemdb on itemdb.id=recordhistorydb.i_id where itemdb.username='ipiszy' order by recordhistorydb.date desc;
 
 
 
 讨厌！！
 。。。
 本来就是很讨厌嘛。。。
 老公。。。
 老公不讨厌
 老公好肉感啊
 re
 好想吃咋办
 过来吃啊
 你过来嘛
 过不去-_-...
 我咋过去啊
 好像是哦
 SBSBSBSBSBSBSBSBSBSBBBBBBBBBBBBBBBBBBb......
 。。。
 我和你skype说
 你不用说话
 听我说好了
 好不
 ok
 稍等
 我打开
 。。。
 
 
 @SuppressWarnings("unchecked")
	public ArrayList<ItemInfo> queryItems(long projectId) {
		Session s = HibernateUtil.currentSession();
		ArrayList<ItemInfo> itemInfoList = new ArrayList<ItemInfo>();
		try {
			HibernateUtil.beginTransaction();
			List itemList = s.createSQLQuery(
					"SELECT id, formname, state, date ,step from itemdb where projectid="
							+ projectId).list();
			HibernateUtil.commitTransaction();

			for (Object obj : itemList) {
				Object[] o = (Object[]) obj;
				long id = Long.parseLong(o[0].toString());
				String formname = o[1].toString();
				String state = o[2].toString();
				String date = o[3].toString();
				int step = Integer.parseInt(o[4].toString());
				System.out.println(step);
				System.out.println(formname);
				HibernateUtil.beginTransaction();
				List departmentList = s.createSQLQuery(
						"select department from formflowdb "
								+ "where formname='" + formname + "' and step="
								+ step).list();
				HibernateUtil.commitTransaction();
				if (departmentList.size() == 0)
					throw new HibernateException("no such department");
				String department = departmentList.get(0).toString();

				List dateList = s.createSQLQuery(
						"select date from recordhistorydb where i_id=" + id
								+ " order by date desc").list();

				String dateModify;

				if (dateList.size() == 0)
					dateModify = "";
				else
					dateModify = dateList.get(0).toString();

				itemInfoList.add(new ItemInfo(id, formname, state, date,
						department, dateModify));
			}

		} catch (HibernateException e) {
			HibernateUtil.commitTransaction();
			e.printStackTrace();
			log.fatal(e);
		} catch (java.lang.IndexOutOfBoundsException e) {
			e.printStackTrace();
			log.fatal(e);
		}
		HibernateUtil.closeSession();
		return itemInfoList;
	}
}
 
    